# version: "3.8"

services:
  astra-backend:
    container_name: astra-backend
    build: .
    ports:
      - "5001:5001"
    env_file:
      - .env
    depends_on:
      - kafka
      - zookeeper
      - rabbitmq
      - redis
    restart: unless-stopped
    volumes:
      - .:/app
    environment:
      KAFKA_BROKER: "kafka:9092"
      RABBITMQ_URL: "amqp://rabbitmq"
      REDIS_URL: "redis://redis:6379"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
  
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      REDIS_HOST: redis
    ports:
      - "8082:8081"
    depends_on:
      - redis

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
  postgres:
    image: postgres:14
    container_name: postgres_container
    environment:
      POSTGRES_DB: astra_protocol
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: nosql
    ports:
      - "5432:5432"

volumes:
  mongodb_data:
